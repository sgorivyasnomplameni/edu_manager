from models.course import Course
from models.student import Student
from models.teacher import Teacher
from models.grade import Grade
from services.enrollment_service import EnrollmentService
from services.evaluation_service import EvaluationService
from utils.scheduler import Scheduler

# —Å–æ–∑–¥–∞—ë–º –∫—É—Ä—Å
python_course = Course("Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö", requirements=[], max_students=2)

# —Å–æ–∑–¥–∞—ë–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
sasha = Student("–°–∞—à–∞")
masha = Student("–ú–∞—à–∞")
petya = Student("–ü–µ—Ç—è")  # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É

# —Å–æ–∑–¥–∞—ë–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º –µ–≥–æ –Ω–∞ –∫—É—Ä—Å
ivan = Teacher("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤")
ivan.assign_course(python_course)

# —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
enroll = EnrollmentService()
enroll.enroll_student_in_course(sasha, python_course)
enroll.enroll_student_in_course(masha, python_course)

try:
    enroll.enroll_student_in_course(petya, python_course)
except Exception as e:
    print(f"[!] –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –ü–µ—Ç—é: {e}")

# –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫–∏
eval_service = EvaluationService()
eval_service.add_grade(sasha, python_course, Grade(85, "—ç–∫–∑–∞–º–µ–Ω"))
eval_service.add_grade(sasha, python_course, Grade(75, "–¥–æ–º–∞—à–∫–∞"))
eval_service.add_grade(masha, python_course, Grade(95, "—ç–∫–∑–∞–º–µ–Ω"))

# —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–ª—ã
print(f"\nüìä —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –°–∞—à–∏: {eval_service.calculate_final_grade(sasha, python_course)}")
print(f"üìä —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –ú–∞—à–∏: {eval_service.calculate_final_grade(masha, python_course)}")

# –∏—Å—Ç–æ—Ä–∏—è –æ—Ü–µ–Ω–æ–∫
print(f"\nüìú –∏—Å—Ç–æ—Ä–∏—è –æ—Ü–µ–Ω–æ–∫ –°–∞—à–∏: {eval_service.get_grade_history(sasha, python_course)}")
print(f"üìú –∏—Å—Ç–æ—Ä–∏—è –æ—Ü–µ–Ω–æ–∫ –ú–∞—à–∏: {eval_service.get_grade_history(masha, python_course)}")

# —Å–æ–∑–¥–∞—ë–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
scheduler = Scheduler()
scheduler.add_lesson("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "10:00", "12:00", python_course)

print("\nüìÖ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:")
for start, end, name in scheduler.get_schedule_for_day("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"):
    print(f" - {start}‚Äì{end} | {name}")

# –ø—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç –≤—Ä–µ–º–µ–Ω–∏
try:
    scheduler.add_lesson("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "11:00", "13:00", python_course)
except Exception as e:
    print(f"[!] –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–Ω—è—Ç–∏–µ: {e}")
